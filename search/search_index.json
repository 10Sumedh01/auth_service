{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project Documentation","text":"<p>This documentation provides a detailed overview of the project's architecture, API, and data models.</p>"},{"location":"#api-documentation","title":"API Documentation","text":"<p>This document provides a detailed explanation of the models, URLs, and views used in the <code>auth_api</code> application.</p>"},{"location":"#data-models-auth_apimodelspy","title":"Data Models (<code>auth_api/models.py</code>)","text":"<p>The service uses the following Django models to store data:</p>"},{"location":"#app","title":"<code>App</code>","text":"<p>Represents an application created by a developer.</p> <ul> <li><code>app_id</code> (CharField): A unique identifier for the application (UUID).</li> <li><code>name</code> (CharField): The name of the application.</li> <li><code>developer</code> (ForeignKey to <code>User</code>): The developer who owns the application.</li> <li><code>created_at</code> (DateTimeField): The timestamp when the application was created.</li> <li>Meta: Ensures that a developer cannot have two apps with the same name.</li> </ul>"},{"location":"#user","title":"<code>User</code>","text":"<p>Represents an end-user of an <code>App</code>.</p> <ul> <li><code>app</code> (ForeignKey to <code>App</code>): The application to which the user belongs.</li> <li><code>user_id</code> (CharField): A unique identifier for the user within the application.</li> <li><code>email</code> (EmailField): The user's email address.</li> <li><code>name</code> (CharField): The user's name (optional).</li> <li><code>auth_method</code> (CharField): The method used for authentication (e.g., <code>oauth</code>, <code>credentials</code>, <code>magic_link</code>).</li> <li><code>last_login</code> (DateTimeField): The timestamp of the user's last login (optional).</li> <li><code>created_at</code> (DateTimeField): The timestamp when the user was created.</li> <li>Meta: Ensures that an email address is unique per application.</li> </ul>"},{"location":"#apikey","title":"<code>ApiKey</code>","text":"<p>Represents an API key for an <code>App</code>, used for authenticating API requests.</p> <ul> <li><code>app</code> (ForeignKey to <code>App</code>): The application the API key belongs to.</li> <li><code>key</code> (CharField): The API key string (UUID).</li> <li><code>created_at</code> (DateTimeField): The timestamp when the key was created.</li> <li><code>is_active</code> (BooleanField): Indicates if the key is currently active.</li> </ul>"},{"location":"#oauthconfig","title":"<code>OAuthConfig</code>","text":"<p>Stores OAuth configuration for an <code>App</code> and a specific provider.</p> <ul> <li><code>app</code> (ForeignKey to <code>App</code>): The application this configuration belongs to.</li> <li><code>provider</code> (CharField): The OAuth provider (e.g., <code>github</code>, <code>google</code>).</li> <li><code>client_id</code> (CharField): The OAuth client ID.</li> <li><code>client_secret</code> (CharField): The OAuth client secret.</li> <li><code>redirect_uri</code> (URLField): The callback URL for the OAuth flow.</li> <li><code>created_at</code> (DateTimeField): The timestamp when the configuration was created.</li> <li>Meta: Ensures that there is only one configuration per provider for each app.</li> </ul>"},{"location":"#url-endpoints-auth_apiurlspy","title":"URL Endpoints (<code>auth_api/urls.py</code>)","text":"<p>The following URL patterns are defined to handle API requests:</p>"},{"location":"#authentication","title":"Authentication","text":"<ul> <li><code>auth/credentials/&lt;str:app_id&gt;</code> -&gt; <code>CredentialsSignInView</code></li> <li><code>auth/magic-link/&lt;str:app_id&gt;</code> -&gt; <code>MagicLinkView</code></li> <li><code>auth/verify/&lt;str:app_id&gt;</code> -&gt; <code>MagicLinkVerifyView</code></li> <li><code>auth/&lt;str:provider&gt;/&lt;str:app_id&gt;</code> -&gt; <code>OAuthRedirectView</code></li> <li><code>auth/callback/&lt;str:provider&gt;/&lt;str:app_id&gt;</code> -&gt; <code>OAuthCallbackView</code></li> </ul>"},{"location":"#user-management","title":"User Management","text":"<ul> <li><code>users/&lt;str:app_id&gt;</code> -&gt; <code>UserListView</code></li> </ul>"},{"location":"#application-management","title":"Application Management","text":"<ul> <li><code>apps/</code> -&gt; <code>AppListCreateView</code></li> </ul>"},{"location":"#api-key-management","title":"API Key Management","text":"<ul> <li><code>apps/&lt;str:app_id&gt;/api-keys</code> -&gt; <code>ApiKeyListView</code></li> </ul>"},{"location":"#oauth-configuration-management","title":"OAuth Configuration Management","text":"<ul> <li><code>apps/&lt;str:app_id&gt;/oauth-configs</code> -&gt; <code>OAuthConfigView</code></li> </ul>"},{"location":"#views-auth_apiviewspy","title":"Views (<code>auth_api/views.py</code>)","text":"<p>The views handle the logic for each API endpoint.</p>"},{"location":"#apikeyauthentication","title":"<code>ApiKeyAuthentication</code>","text":"<p>A custom authentication class that validates API keys provided in the <code>Authorization</code> header.</p>"},{"location":"#oauthredirectview-get","title":"<code>OAuthRedirectView</code> (GET)","text":"<p>Initiates the OAuth flow by redirecting the user to the provider's authorization page.</p>"},{"location":"#oauthcallbackview-post","title":"<code>OAuthCallbackView</code> (POST)","text":"<p>Handles the callback from the OAuth provider, exchanges the authorization code for an access token, retrieves user information, creates or updates the user in the database, and returns a JWT.</p>"},{"location":"#credentialssigninview-post","title":"<code>CredentialsSignInView</code> (POST)","text":"<p>Authenticates a user with email and password, creates or updates the user record, and returns a JWT.</p>"},{"location":"#magiclinkview-post","title":"<code>MagicLinkView</code> (POST)","text":"<p>Generates a JWT with the user's information, creates a verification link, and emails it to the user.</p>"},{"location":"#magiclinkverifyview-get","title":"<code>MagicLinkVerifyView</code> (GET)","text":"<p>Verifies the JWT from the magic link, updates the user's <code>last_login</code> time, and returns the token.</p>"},{"location":"#userlistview-get","title":"<code>UserListView</code> (GET)","text":"<p>Requires API key authentication. Returns a list of all users associated with a given <code>app_id</code>.</p>"},{"location":"#applistcreateview-get-post","title":"<code>AppListCreateView</code> (GET, POST)","text":"<p>Requires developer authentication. -   GET: Lists all applications owned by the authenticated developer. -   POST: Creates a new application for the developer and generates an initial API key.</p>"},{"location":"#apikeylistview-get-post","title":"<code>ApiKeyListView</code> (GET, POST)","text":"<p>Requires developer authentication. -   GET: Lists all API keys for a given <code>app_id</code>. -   POST: Deactivates all existing API keys and creates a new one.</p>"},{"location":"#oauthconfigview-get-post","title":"<code>OAuthConfigView</code> (GET, POST)","text":"<p>Requires developer authentication. -   GET: Lists all OAuth configurations for a given <code>app_id</code>. -   POST: Creates a new OAuth configuration for the application.</p>"}]}